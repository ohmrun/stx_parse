// Generated by Haxe 4.0.0-preview.5
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = "EReg";
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = "HxOverrides";
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var PrimitiveType = $hxEnums["PrimitiveType"] = { __ename__ : true, __constructs__ : ["Number","FloatNumber"]
	,Number: ($_=function(x) { return {_hx_index:0,x:x,__enum__:"PrimitiveType",toString:$estr}; },$_.__params__ = ["x"],$_)
	,FloatNumber: ($_=function(x) { return {_hx_index:1,x:x,__enum__:"PrimitiveType",toString:$estr}; },$_.__params__ = ["x"],$_)
};
var RExpression = $hxEnums["RExpression"] = { __ename__ : true, __constructs__ : ["Primitive","Ident","LambdaExpr","Apply"]
	,Primitive: ($_=function(p) { return {_hx_index:0,p:p,__enum__:"RExpression",toString:$estr}; },$_.__params__ = ["p"],$_)
	,Ident: ($_=function(id) { return {_hx_index:1,id:id,__enum__:"RExpression",toString:$estr}; },$_.__params__ = ["id"],$_)
	,LambdaExpr: ($_=function(param,expr) { return {_hx_index:2,param:param,expr:expr,__enum__:"RExpression",toString:$estr}; },$_.__params__ = ["param","expr"],$_)
	,Apply: ($_=function(fun,param) { return {_hx_index:3,fun:fun,param:param,__enum__:"RExpression",toString:$estr}; },$_.__params__ = ["fun","param"],$_)
};
var com_mindrocks_text_ParseResult = $hxEnums["com.mindrocks.text.ParseResult"] = { __ename__ : true, __constructs__ : ["Success","Failure"]
	,Success: ($_=function(match,rest) { return {_hx_index:0,match:match,rest:rest,__enum__:"com.mindrocks.text.ParseResult",toString:$estr}; },$_.__params__ = ["match","rest"],$_)
	,Failure: ($_=function(errorStack,rest,isError) { return {_hx_index:1,errorStack:errorStack,rest:rest,isError:isError,__enum__:"com.mindrocks.text.ParseResult",toString:$estr}; },$_.__params__ = ["errorStack","rest","isError"],$_)
};
var com_mindrocks_functional_List = function(v,t) {
	this._headV = v;
	this._tailV = t;
};
com_mindrocks_functional_List.__name__ = "com.mindrocks.functional.List";
com_mindrocks_functional_List.nil = function() {
	return com_mindrocks_functional_Nil._nil;
};
com_mindrocks_functional_List.cons = function(t,v) {
	return new com_mindrocks_functional_List(v,t);
};
com_mindrocks_functional_List.contains = function(l,v) {
	while(!l.isEmpty()) {
		if(l.get_head() == v) {
			return true;
		}
		l = l.get_tail();
	}
	return false;
};
com_mindrocks_functional_List.filter = function(l,p) {
	if(l.isEmpty()) {
		return com_mindrocks_functional_Nil._nil;
	} else {
		var v = l.get_head();
		var tail = com_mindrocks_functional_List.filter(l.get_tail(),p);
		if(p(v)) {
			return new com_mindrocks_functional_List(v,tail);
		} else {
			return tail;
		}
	}
};
com_mindrocks_functional_List.each = function(l,p) {
	if(!l.isEmpty()) {
		p(l.get_head());
		var l1 = l.get_tail();
	}
};
com_mindrocks_functional_List.map = function(l,p) {
	if(l.isEmpty()) {
		return new com_mindrocks_functional_Nil();
	} else {
		return new com_mindrocks_functional_List(p(l.get_head()),com_mindrocks_functional_List.map(l.get_tail(),p));
	}
};
com_mindrocks_functional_List.last = function(l) {
	var r = null;
	while(true) if(((l) instanceof com_mindrocks_functional_Nil)) {
		if(r == null) {
			throw new js__$Boot_HaxeError("last called on Nil");
		} else {
			return r.get_head();
		}
	} else {
		r = l;
		l = l.get_tail();
	}
};
com_mindrocks_functional_List.prototype = {
	get_head: function() {
		return this._headV;
	}
	,get_tail: function() {
		return this._tailV;
	}
	,isEmpty: function() {
		return false;
	}
	,__class__: com_mindrocks_functional_List
};
var com_mindrocks_functional_Nil = function() {
	com_mindrocks_functional_List.call(this,null,null);
};
com_mindrocks_functional_Nil.__name__ = "com.mindrocks.functional.Nil";
com_mindrocks_functional_Nil.__super__ = com_mindrocks_functional_List;
com_mindrocks_functional_Nil.prototype = $extend(com_mindrocks_functional_List.prototype,{
	isEmpty: function() {
		return true;
	}
	,get_head: function() {
		throw new js__$Boot_HaxeError("Cannot access head of Nil");
	}
	,get_tail: function() {
		throw new js__$Boot_HaxeError("Cannot access tail of Nil");
	}
	,__class__: com_mindrocks_functional_Nil
});
var Parsers = function() { };
Parsers.__name__ = "Parsers";
Parsers.mkLR = function(seed,rule,head) {
	return { seed : seed, rule : rule, head : head};
};
Parsers.mkHead = function(p) {
	return { headParser : p, involvedSet : com_mindrocks_functional_Nil._nil, evalSet : com_mindrocks_functional_Nil._nil};
};
Parsers.getPos = function(lr) {
	var _g = lr.seed;
	switch(_g._hx_index) {
	case 0:
		var rest = _g.rest;
		return rest;
	case 1:
		var rest1 = _g.rest;
		return rest1;
	}
};
Parsers.getHead = function(hd) {
	return hd.headParser;
};
Parsers.parserUid = function() {
	return ++Parsers._parserUid;
};
Parsers.lrAnswer = function(p,genKey,input,growable) {
	var _g = growable.head;
	switch(_g._hx_index) {
	case 0:
		throw new js__$Boot_HaxeError("lrAnswer with no head!!");
	case 1:
		var head = _g.x;
		if(Parsers.getHead(head) != p) {
			return growable.seed;
		} else {
			var entry = com_mindrocks_text_MemoEntry.MemoParsed(growable.seed);
			var key = genKey(input.offset);
			var _this = input.memo.memoEntries;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,entry);
			} else {
				_this.h[key] = entry;
			}
			switch(growable.seed._hx_index) {
			case 0:
				return Parsers.grow(p,genKey,input,head);
			case 1:
				return growable.seed;
			}
		}
		break;
	}
};
Parsers.recall = function(p,genKey,input) {
	var key = genKey(input.offset);
	var _this = input.memo.memoEntries;
	var res = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	var cached = res == null ? com_mindrocks_functional_Option.None : com_mindrocks_functional_Option.Some(res);
	var key1 = input.offset + "";
	var _this1 = input.memo.recursionHeads;
	var res1 = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	var _g = res1 == null ? com_mindrocks_functional_Option.None : com_mindrocks_functional_Option.Some(res1);
	switch(_g._hx_index) {
	case 0:
		return cached;
	case 1:
		var head = _g.x;
		if(cached == com_mindrocks_functional_Option.None && !com_mindrocks_functional_List.contains(new com_mindrocks_functional_List(head.headParser,head.involvedSet),p)) {
			var newStack = com_mindrocks_functional_Nil._nil;
			return com_mindrocks_functional_Option.Some(com_mindrocks_text_MemoEntry.MemoParsed(com_mindrocks_text_ParseResult.Failure(new com_mindrocks_functional_List({ msg : "dummy ", pos : input.offset},newStack),input,false)));
		}
		if(com_mindrocks_functional_List.contains(head.evalSet,p)) {
			head.evalSet = com_mindrocks_functional_List.filter(head.evalSet,function(x) {
				return x != p;
			});
			var memo = com_mindrocks_text_MemoEntry.MemoParsed(p(input));
			var key2 = genKey(input.offset);
			var _this2 = input.memo.memoEntries;
			if(__map_reserved[key2] != null) {
				_this2.setReserved(key2,memo);
			} else {
				_this2.h[key2] = memo;
			}
			cached = com_mindrocks_functional_Option.Some(memo);
		}
		return cached;
	}
};
Parsers.setupLR = function(p,input,recDetect) {
	if(recDetect.head == com_mindrocks_functional_Option.None) {
		recDetect.head = com_mindrocks_functional_Option.Some(Parsers.mkHead(p));
	}
	var stack = input.memo.lrStack;
	var h = com_mindrocks_functional_Functional.get(recDetect.head);
	while(stack.get_head().rule != p) {
		var head = stack.get_head();
		head.head = recDetect.head;
		h.involvedSet = new com_mindrocks_functional_List(head.rule,h.involvedSet);
		stack = stack.get_tail();
	}
};
Parsers.grow = function(p,genKey,rest,head) {
	var key = rest.offset + "";
	var _this = rest.memo.recursionHeads;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,head);
	} else {
		_this.h[key] = head;
	}
	var oldRes;
	var key1 = genKey(rest.offset);
	var _this1 = rest.memo.memoEntries;
	var res = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	var _g = com_mindrocks_functional_Functional.get(res == null ? com_mindrocks_functional_Option.None : com_mindrocks_functional_Option.Some(res));
	if(_g._hx_index == 0) {
		var ans = _g.ans;
		oldRes = ans;
	} else {
		throw new js__$Boot_HaxeError("impossible match");
	}
	head.evalSet = head.involvedSet;
	var res1 = p(rest);
	switch(res1._hx_index) {
	case 0:
		if(com_mindrocks_text_ResultObj.posFromResult(oldRes).offset < com_mindrocks_text_ResultObj.posFromResult(res1).offset) {
			var entry = com_mindrocks_text_MemoEntry.MemoParsed(res1);
			var key2 = genKey(rest.offset);
			var _this2 = rest.memo.memoEntries;
			if(__map_reserved[key2] != null) {
				_this2.setReserved(key2,entry);
			} else {
				_this2.h[key2] = entry;
			}
			return Parsers.grow(p,genKey,rest,head);
		} else {
			rest.memo.recursionHeads.remove(rest.offset + "");
			var key3 = genKey(rest.offset);
			var _this3 = rest.memo.memoEntries;
			var res2 = __map_reserved[key3] != null ? _this3.getReserved(key3) : _this3.h[key3];
			var _g1 = com_mindrocks_functional_Functional.get(res2 == null ? com_mindrocks_functional_Option.None : com_mindrocks_functional_Option.Some(res2));
			if(_g1._hx_index == 0) {
				var ans1 = _g1.ans;
				return ans1;
			} else {
				throw new js__$Boot_HaxeError("impossible match");
			}
		}
		break;
	case 1:
		var isError = res1.isError;
		if(isError) {
			var entry1 = com_mindrocks_text_MemoEntry.MemoParsed(res1);
			var key4 = genKey(rest.offset);
			var _this4 = rest.memo.memoEntries;
			if(__map_reserved[key4] != null) {
				_this4.setReserved(key4,entry1);
			} else {
				_this4.h[key4] = entry1;
			}
			rest.memo.recursionHeads.remove(rest.offset + "");
			return res1;
		} else {
			rest.memo.recursionHeads.remove(rest.offset + "");
			return oldRes;
		}
		break;
	}
};
Parsers.memo = function(_p) {
	var f = function() {
		var uid = Parsers.parserUid();
		var genKey = function(pos) {
			return uid + "@" + pos;
		};
		return function(input) {
			var _g = Parsers.recall(_p(),genKey,input);
			switch(_g._hx_index) {
			case 0:
				var newStack = com_mindrocks_functional_Nil._nil;
				var base = Parsers.mkLR(com_mindrocks_text_ParseResult.Failure(new com_mindrocks_functional_List({ msg : "Base Failure", pos : input.offset},newStack),input,false),_p(),com_mindrocks_functional_Option.None);
				var f1 = new com_mindrocks_functional_List(base,input.memo.lrStack);
				input.memo.lrStack = f1;
				var entry = com_mindrocks_text_MemoEntry.MemoLR(base);
				var key = genKey(input.offset);
				var _this = input.memo.memoEntries;
				if(__map_reserved[key] != null) {
					_this.setReserved(key,entry);
				} else {
					_this.h[key] = entry;
				}
				var res = (_p())(input);
				input.memo.lrStack = input.memo.lrStack.get_tail();
				switch(base.head._hx_index) {
				case 0:
					var entry1 = com_mindrocks_text_MemoEntry.MemoParsed(res);
					var key1 = genKey(input.offset);
					var _this1 = input.memo.memoEntries;
					if(__map_reserved[key1] != null) {
						_this1.setReserved(key1,entry1);
					} else {
						_this1.h[key1] = entry1;
					}
					return res;
				case 1:
					base.seed = res;
					return Parsers.lrAnswer(_p(),genKey,input,base);
				}
				break;
			case 1:
				var mEntry = _g.x;
				switch(mEntry._hx_index) {
				case 0:
					var ans = mEntry.ans;
					return ans;
				case 1:
					var recDetect = mEntry.lr;
					Parsers.setupLR(_p(),input,recDetect);
					return recDetect.seed;
				}
				break;
			}
		};
	};
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
};
Parsers.fail = function(error,isError) {
	var f = function() {
		return function(input) {
			var newStack = com_mindrocks_functional_Nil._nil;
			return com_mindrocks_text_ParseResult.Failure(new com_mindrocks_functional_List({ msg : error, pos : input.offset},newStack),input,isError);
		};
	};
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
};
Parsers.success = function(v) {
	var f = function() {
		return function(input) {
			return com_mindrocks_text_ParseResult.Success(v,input);
		};
	};
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
};
Parsers.identity = function(p) {
	return p;
};
Parsers.andWith = function(p1,p2,f) {
	var f1 = function() {
		return function(input) {
			var res = (p1())(input);
			switch(res._hx_index) {
			case 0:
				var r = res.rest;
				var m1 = res.match;
				var res1 = (p2())(r);
				switch(res1._hx_index) {
				case 0:
					var r1 = res1.rest;
					var m2 = res1.match;
					return com_mindrocks_text_ParseResult.Success(f(m1,m2),r1);
				case 1:
					return res1;
				}
				break;
			case 1:
				return res;
			}
		};
	};
	var r2 = null;
	return function() {
		if(r2 == null) {
			r2 = false;
			r2 = f1();
			return r2;
		} else {
			return r2;
		}
	};
};
Parsers.and = function(p1,p2) {
	return Parsers.andWith(p1,p2,com_mindrocks_functional_Tuples.t2);
};
Parsers.sndParam = function(_,b) {
	return b;
};
Parsers.__and = function(p1,p2) {
	return Parsers.andWith(p1,p2,Parsers.sndParam);
};
Parsers.fstParam = function(a,_) {
	return a;
};
Parsers.and_ = function(p1,p2) {
	return Parsers.andWith(p1,p2,Parsers.fstParam);
};
Parsers.andThen = function(p1,fp2) {
	var f = function() {
		return function(input) {
			var res = (p1())(input);
			switch(res._hx_index) {
			case 0:
				var r = res.rest;
				var m = res.match;
				return ((fp2(m))())(r);
			case 1:
				var r1 = res;
				return r1;
			}
		};
	};
	var r2 = null;
	return function() {
		if(r2 == null) {
			r2 = false;
			r2 = f();
			return r2;
		} else {
			return r2;
		}
	};
};
Parsers.then = function(p1,f) {
	var f1 = function() {
		return function(input) {
			var res = (p1())(input);
			switch(res._hx_index) {
			case 0:
				var r = res.rest;
				var m = res.match;
				return com_mindrocks_text_ParseResult.Success(f(m),r);
			case 1:
				return res;
			}
		};
	};
	var r1 = null;
	return function() {
		if(r1 == null) {
			r1 = false;
			r1 = f1();
			return r1;
		} else {
			return r1;
		}
	};
};
Parsers.forPredicate = function(pred) {
	return function(x) {
		if(pred(x)) {
			return Parsers.success(x);
		} else {
			return Parsers.defaultFail;
		}
	};
};
Parsers.filter = function(p,pred) {
	var pred1 = pred;
	return Parsers.andThen(p,function(x) {
		if(pred1(x)) {
			return Parsers.success(x);
		} else {
			return Parsers.defaultFail;
		}
	});
};
Parsers.commit = function(p1) {
	var f = function() {
		return function(input) {
			var res = (p1())(input);
			switch(res._hx_index) {
			case 0:
				return res;
			case 1:
				var isError = res.isError;
				var rest = res.rest;
				var err = res.errorStack;
				if(isError || com_mindrocks_functional_List.last(err).msg == "Base Failure") {
					return res;
				} else {
					return com_mindrocks_text_ParseResult.Failure(err,rest,true);
				}
				break;
			}
		};
	};
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
};
Parsers.or = function(p1,p2) {
	var f = function() {
		return function(input) {
			var res = (p1())(input);
			switch(res._hx_index) {
			case 0:
				return res;
			case 1:
				var isError = res.isError;
				if(isError) {
					return res;
				} else {
					return (p2())(input);
				}
				break;
			}
		};
	};
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
};
Parsers.ors = function(ps) {
	var f = function() {
		return function(input) {
			var pIndex = 0;
			while(pIndex < ps.length) {
				var res = (ps[pIndex]())(input);
				switch(res._hx_index) {
				case 0:
					return res;
				case 1:
					var isError = res.isError;
					if(isError || ++pIndex == ps.length) {
						return res;
					}
					break;
				}
			}
			var newStack = com_mindrocks_functional_Nil._nil;
			return com_mindrocks_text_ParseResult.Failure(new com_mindrocks_functional_List({ msg : "none match", pos : input.offset},newStack),input,false);
		};
	};
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
};
Parsers.many = function(p1) {
	var f = function() {
		return function(input) {
			var parser = p1();
			var arr = [];
			var matches = true;
			while(matches) {
				var res = parser(input);
				switch(res._hx_index) {
				case 0:
					var r = res.rest;
					var m = res.match;
					arr.push(m);
					input = r;
					break;
				case 1:
					var isError = res.isError;
					if(isError) {
						return res;
					} else {
						matches = false;
					}
					break;
				}
			}
			return com_mindrocks_text_ParseResult.Success(arr,input);
		};
	};
	var r1 = null;
	return function() {
		if(r1 == null) {
			r1 = false;
			r1 = f();
			return r1;
		} else {
			return r1;
		}
	};
};
Parsers.notEmpty = function(arr) {
	return arr.length > 0;
};
Parsers.oneMany = function(p1) {
	var pred = Parsers.notEmpty;
	var tmp = function(x) {
		if(pred(x)) {
			return Parsers.success(x);
		} else {
			return Parsers.defaultFail;
		}
	};
	return Parsers.andThen(Parsers.many(p1),tmp);
};
Parsers.rep1sep = function(p1,sep) {
	return Parsers.then(Parsers.andWith(p1,Parsers.many(Parsers.andWith(sep,p1,Parsers.sndParam)),com_mindrocks_functional_Tuples.t2),function(t) {
		t.b.splice(0,0,t.a);
		return t.b;
	});
};
Parsers.repsep = function(p1,sep) {
	return Parsers.or(Parsers.rep1sep(p1,sep),Parsers.success([]));
};
Parsers.chainl1 = function(p1,op) {
	var rest = null;
	rest = function(x) {
		return Parsers.or(Parsers.andThen(op,function(f) {
			return Parsers.andThen(p1,function(y) {
				var rest1 = f(x,y);
				return rest(rest1);
			});
		}),Parsers.success(x));
	};
	return Parsers.andThen(p1,rest);
};
Parsers.option = function(p1) {
	return Parsers.or(Parsers.then(p1,com_mindrocks_functional_Option.Some),Parsers.success(com_mindrocks_functional_Option.None));
};
Parsers.trace = function(p,f) {
	return Parsers.then(p,function(x) {
		haxe_Log.trace(f(x),{ fileName : "src/com/mindrocks/text/Parser.hx", lineNumber : 570, className : "com.mindrocks.text.Parsers", methodName : "trace"});
		return x;
	});
};
Parsers.identifier = function(x) {
	var f = function() {
		return function(input) {
			if(input.content.range(input.offset,x.length) == x) {
				return com_mindrocks_text_ParseResult.Success(x,{ content : input.content, offset : input.offset + x.length, memo : input.memo});
			} else {
				var newStack = com_mindrocks_functional_Nil._nil;
				return com_mindrocks_text_ParseResult.Failure(new com_mindrocks_functional_List({ msg : x + " expected and not found", pos : input.offset},newStack),input,false);
			}
		};
	};
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
};
Parsers.regexParser = function(r) {
	var f = function() {
		return function(input) {
			if(r.match(input.content.range(input.offset))) {
				var pos = r.matchedPos();
				if(pos.pos == 0) {
					return com_mindrocks_text_ParseResult.Success(input.content.range(input.offset,pos.len),{ content : input.content, offset : input.offset + pos.len, memo : input.memo});
				} else {
					var newStack = com_mindrocks_functional_Nil._nil;
					return com_mindrocks_text_ParseResult.Failure(new com_mindrocks_functional_List({ msg : Std.string(r) + "not matched at position " + input.offset, pos : input.offset},newStack),input,false);
				}
			} else {
				var newStack1 = com_mindrocks_functional_Nil._nil;
				return com_mindrocks_text_ParseResult.Failure(new com_mindrocks_functional_List({ msg : Std.string(r) + " not matched", pos : input.offset},newStack1),input,false);
			}
		};
	};
	var r1 = null;
	return function() {
		if(r1 == null) {
			r1 = false;
			r1 = f();
			return r1;
		} else {
			return r1;
		}
	};
};
Parsers.withError = function(p,f) {
	var f1 = function() {
		return function(input) {
			var _g = (p())(input);
			if(_g._hx_index == 1) {
				var isError = _g.isError;
				var input1 = _g.rest;
				var err = _g.errorStack;
				return com_mindrocks_text_ParseResult.Failure(new com_mindrocks_functional_List({ msg : f(err.get_head().msg), pos : input1.offset},err),input1,isError);
			} else {
				var r = _g;
				return r;
			}
		};
	};
	var r1 = null;
	return function() {
		if(r1 == null) {
			r1 = false;
			r1 = f1();
			return r1;
		} else {
			return r1;
		}
	};
};
Parsers.tag = function(p,tag) {
	return Parsers.withError(p,function(_) {
		return tag + " expected";
	});
};
var com_mindrocks_functional_Option = $hxEnums["com.mindrocks.functional.Option"] = { __ename__ : true, __constructs__ : ["None","Some"]
	,None: {_hx_index:0,__enum__:"com.mindrocks.functional.Option",toString:$estr}
	,Some: ($_=function(x) { return {_hx_index:1,x:x,__enum__:"com.mindrocks.functional.Option",toString:$estr}; },$_.__params__ = ["x"],$_)
};
var com_mindrocks_text_MemoEntry = $hxEnums["com.mindrocks.text.MemoEntry"] = { __ename__ : true, __constructs__ : ["MemoParsed","MemoLR"]
	,MemoParsed: ($_=function(ans) { return {_hx_index:0,ans:ans,__enum__:"com.mindrocks.text.MemoEntry",toString:$estr}; },$_.__params__ = ["ans"],$_)
	,MemoLR: ($_=function(lr) { return {_hx_index:1,lr:lr,__enum__:"com.mindrocks.text.MemoEntry",toString:$estr}; },$_.__params__ = ["lr"],$_)
};
var com_mindrocks_functional_Functional = function() { };
com_mindrocks_functional_Functional.__name__ = "com.mindrocks.functional.Functional";
com_mindrocks_functional_Functional.get = function(o) {
	if(o._hx_index == 1) {
		var x = o.x;
		return x;
	} else {
		throw new js__$Boot_HaxeError("Error Option get on None");
	}
};
com_mindrocks_functional_Functional.lazy = function(f) {
	var r = null;
	return function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
};
var com_mindrocks_text_ResultObj = function() { };
com_mindrocks_text_ResultObj.__name__ = "com.mindrocks.text.ResultObj";
com_mindrocks_text_ResultObj.castType = function(p) {
	return p;
};
com_mindrocks_text_ResultObj.posFromResult = function(p) {
	switch(p._hx_index) {
	case 0:
		var rest = p.rest;
		return rest;
	case 1:
		var rest1 = p.rest;
		return rest1;
	}
};
com_mindrocks_text_ResultObj.matchFromResult = function(p) {
	switch(p._hx_index) {
	case 0:
		var x = p.match;
		return Std.string(x);
	case 1:
		return "";
	}
};
var Std = function() { };
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var js_Boot = function() { };
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(((o) instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var com_mindrocks_functional_Tuples = function() { };
com_mindrocks_functional_Tuples.__name__ = "com.mindrocks.functional.Tuples";
com_mindrocks_functional_Tuples.t2 = function(a,b) {
	return { a : a, b : b};
};
var LambdaTest = function() { };
LambdaTest.__name__ = "LambdaTest";
LambdaTest.maybeRet = function(p) {
	return Parsers.andWith(Parsers.option(LambdaTest.spacingOrRetP),p,Parsers.sndParam);
};
LambdaTest.withSpacing = function(p) {
	return Parsers.andWith(LambdaTest.spacingP,p,Parsers.sndParam);
};
var LangParser = function() { };
LangParser.__name__ = "LangParser";
LangParser.tryParse = function(str,parser,withResult,output) {
	try {
		var res = haxe_Timer.measure(function() {
			var res1 = com_mindrocks_text_Tools.enumerable(str);
			var res2 = new haxe_ds_StringMap();
			return parser({ content : res1, offset : 0, memo : { memoEntries : res2, recursionHeads : new haxe_ds_StringMap(), lrStack : com_mindrocks_functional_Nil._nil}});
		},{ fileName : "test/LangParser.hx", lineNumber : 177, className : "LangParser", methodName : "tryParse"});
		switch(res._hx_index) {
		case 0:
			var rest = res.rest;
			var res3 = res.match;
			var remaining = rest.content.range(rest.offset);
			if(StringTools.trim(remaining).length == 0) {
				haxe_Log.trace("success!",{ fileName : "test/LangParser.hx", lineNumber : 183, className : "LangParser", methodName : "tryParse"});
			} else {
				haxe_Log.trace("cannot parse " + remaining,{ fileName : "test/LangParser.hx", lineNumber : 185, className : "LangParser", methodName : "tryParse"});
			}
			withResult(res3);
			break;
		case 1:
			var rest1 = res.rest;
			var err = res.errorStack;
			var p = com_mindrocks_text_ReaderObj.textAround(rest1);
			output(p.text);
			output(p.indicator);
			com_mindrocks_functional_List.map(err,function(error) {
				output("Error at " + error.pos + " : " + error.msg);
			});
			break;
		}
	} catch( e ) {
		haxe_Log.trace("Error " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),{ fileName : "test/LangParser.hx", lineNumber : 199, className : "LangParser", methodName : "tryParse"});
	}
};
LangParser.langTest = function() {
	var toOutput = function(str) {
		haxe_Log.trace(StringTools.replace(str," ","_"),{ fileName : "test/LangParser.hx", lineNumber : 206, className : "LangParser", methodName : "langTest"});
	};
	LangParser.tryParse("\r\n      toto =\r\n        let\r\n          a = 56\r\n          b = d\r\n          v = a =>\r\n            let x = 12\r\n            in x\r\n          b = d\r\n        in\r\n          add c d          \r\n    ",LambdaTest.programP(),function(res) {
		haxe_Log.trace("Parsed " + Std.string(res),{ fileName : "test/LangParser.hx", lineNumber : 222, className : "LangParser", methodName : "langTest"});
	},toOutput);
};
var Main = function() { };
Main.__name__ = "Main";
Main.main = function() {
	haxe_Log.trace("before",{ fileName : "Main.hx", lineNumber : 6, className : "Main", methodName : "main"});
	Test.main();
	haxe_Log.trace("later",{ fileName : "Main.hx", lineNumber : 8, className : "Main", methodName : "main"});
};
Math.__name__ = "Math";
var StringTools = function() { };
StringTools.__name__ = "StringTools";
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Test = function() { };
Test.__name__ = "Test";
Test.main = function() {
	LangParser.langTest();
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
Type.__name__ = "Type";
Type["typeof"] = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var com_mindrocks_text_Tools = function() { };
com_mindrocks_text_Tools.__name__ = "com.mindrocks.text.Tools";
com_mindrocks_text_Tools.enumerable = function(v) {
	var o = null;
	var _g = Type["typeof"](v);
	if(_g._hx_index == 6) {
		var c = _g.c;
		switch(c.__name__) {
		case "Array":
			o = new com_mindrocks_text_ArrayEnumerable(v);
			break;
		case "String":
			o = new com_mindrocks_text_StringEnumerable(v);
			break;
		default:
			throw new js__$Boot_HaxeError("no Enumerable found for " + Std.string(c));
		}
	} else {
		throw new js__$Boot_HaxeError("no Enumerable found for: " + Std.string(v));
	}
	return o;
};
com_mindrocks_text_Tools.isSequencable = function(v) {
	var _g = Type["typeof"](v);
	if(_g._hx_index == 6) {
		var c = _g.c;
		switch(c.__name__) {
		case "Array":
			return true;
		case "String":
			return true;
		default:
			return false;
		}
	} else {
		return false;
	}
};
com_mindrocks_text_Tools.isImmutable = function(x) {
	if(!(x == null || typeof(x) == "boolean" || typeof(x) == "number")) {
		return typeof(x) == "string";
	} else {
		return true;
	}
};
var com_mindrocks_text_Indexable = function(data,index) {
	if(index == null) {
		index = 0;
	}
	this.data = data;
	this.index = index;
};
com_mindrocks_text_Indexable.__name__ = "com.mindrocks.text.Indexable";
com_mindrocks_text_Indexable.prototype = {
	at: function(i) {
		throw new js__$Boot_HaxeError("abstract method");
	}
	,get_length: function() {
		throw new js__$Boot_HaxeError("abstract method");
	}
	,__class__: com_mindrocks_text_Indexable
};
var com_mindrocks_text_Enumerable = function(d,i) {
	com_mindrocks_text_Indexable.call(this,d,i);
};
com_mindrocks_text_Enumerable.__name__ = "com.mindrocks.text.Enumerable";
com_mindrocks_text_Enumerable.__super__ = com_mindrocks_text_Indexable;
com_mindrocks_text_Enumerable.prototype = $extend(com_mindrocks_text_Indexable.prototype,{
	next: function() {
		var o = this.at(this.index);
		this.index++;
		return o;
	}
	,hasNext: function() {
		return this.index < this.get_length();
	}
	,setIndex: function(i) {
		this.index = i;
		return this;
	}
	,prepend: function(v) {
		throw new js__$Boot_HaxeError("abstract function");
	}
	,range: function(loc,len) {
		throw new js__$Boot_HaxeError("abstract function");
	}
	,__class__: com_mindrocks_text_Enumerable
});
var com_mindrocks_text_StringEnumerable = function(v,i) {
	com_mindrocks_text_Enumerable.call(this,v,i);
};
com_mindrocks_text_StringEnumerable.__name__ = "com.mindrocks.text.StringEnumerable";
com_mindrocks_text_StringEnumerable.__super__ = com_mindrocks_text_Enumerable;
com_mindrocks_text_StringEnumerable.prototype = $extend(com_mindrocks_text_Enumerable.prototype,{
	at: function(i) {
		return this.data.charAt(this.index);
	}
	,get_length: function() {
		return this.data.length;
	}
	,prepend: function(v) {
		var left = HxOverrides.substr(this.data,0,this.index);
		var right = HxOverrides.substr(this.data,this.index,null);
		return new com_mindrocks_text_StringEnumerable(this.data = left + v + right,this.index);
	}
	,range: function(loc,len) {
		if(len == null) {
			len = this.get_length() - loc;
		}
		return HxOverrides.substr(this.data,loc,len);
	}
	,__class__: com_mindrocks_text_StringEnumerable
});
var com_mindrocks_text_ArrayEnumerable = function(v,i) {
	com_mindrocks_text_Enumerable.call(this,v,i);
};
com_mindrocks_text_ArrayEnumerable.__name__ = "com.mindrocks.text.ArrayEnumerable";
com_mindrocks_text_ArrayEnumerable.__super__ = com_mindrocks_text_Enumerable;
com_mindrocks_text_ArrayEnumerable.prototype = $extend(com_mindrocks_text_Enumerable.prototype,{
	at: function(i) {
		return this.data[i];
	}
	,get_length: function() {
		return this.data.length;
	}
	,prepend: function(v) {
		var out = this.data.slice();
		out.splice(this.index,0,v);
		return new com_mindrocks_text_ArrayEnumerable(out,this.index);
	}
	,range: function(loc,len) {
		len = len == null ? this.get_length() - loc : len;
		return this.data.slice(loc,loc + len);
	}
	,__class__: com_mindrocks_text_ArrayEnumerable
});
var com_mindrocks_text_StringIterator = function(data) {
	this.data = data;
	this.ln = data.length;
};
com_mindrocks_text_StringIterator.__name__ = "com.mindrocks.text.StringIterator";
com_mindrocks_text_StringIterator.prototype = {
	next: function() {
		var o = this.data.charAt(this.index);
		this.index++;
		return o;
	}
	,hasNext: function() {
		return this.index < this.ln;
	}
	,__class__: com_mindrocks_text_StringIterator
};
var com_mindrocks_text_ParserObj = function() { };
com_mindrocks_text_ParserObj.__name__ = "com.mindrocks.text.ParserObj";
com_mindrocks_text_ParserObj.castType = function(p) {
	return p;
};
var com_mindrocks_text_MemoObj = function() { };
com_mindrocks_text_MemoObj.__name__ = "com.mindrocks.text.MemoObj";
com_mindrocks_text_MemoObj.updateCacheAndGet = function(r,genKey,entry) {
	var key = genKey(r.offset);
	var _this = r.memo.memoEntries;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,entry);
	} else {
		_this.h[key] = entry;
	}
	return entry;
};
com_mindrocks_text_MemoObj.getFromCache = function(r,genKey) {
	var key = genKey(r.offset);
	var _this = r.memo.memoEntries;
	var res = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(res == null) {
		return com_mindrocks_functional_Option.None;
	} else {
		return com_mindrocks_functional_Option.Some(res);
	}
};
com_mindrocks_text_MemoObj.getRecursionHead = function(r) {
	var key = r.offset + "";
	var _this = r.memo.recursionHeads;
	var res = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(res == null) {
		return com_mindrocks_functional_Option.None;
	} else {
		return com_mindrocks_functional_Option.Some(res);
	}
};
com_mindrocks_text_MemoObj.setRecursionHead = function(r,head) {
	var key = r.offset + "";
	var _this = r.memo.recursionHeads;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,head);
	} else {
		_this.h[key] = head;
	}
};
com_mindrocks_text_MemoObj.removeRecursionHead = function(r) {
	r.memo.recursionHeads.remove(r.offset + "");
};
com_mindrocks_text_MemoObj.forKey = function(m,key) {
	var _this = m.memoEntries;
	var value = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(value == null) {
		return com_mindrocks_functional_Option.None;
	} else {
		return com_mindrocks_functional_Option.Some(value);
	}
};
var com_mindrocks_text_ReaderObj = function() { };
com_mindrocks_text_ReaderObj.__name__ = "com.mindrocks.text.ReaderObj";
com_mindrocks_text_ReaderObj.textAround = function(r,before,after) {
	if(after == null) {
		after = 10;
	}
	if(before == null) {
		before = 10;
	}
	var offset = Math.max(0,r.offset - before) | 0;
	var text = r.content.range(offset,before + after);
	var indicPadding = Math.min(r.offset,before) | 0;
	var indicator = StringTools.lpad("^","_",indicPadding + 1);
	return { text : text, indicator : indicator};
};
com_mindrocks_text_ReaderObj.errorMessage = function(r,msg) {
	var x = com_mindrocks_text_ReaderObj.textAround(r);
	var r1 = "";
	com_mindrocks_functional_List.each(msg,function(err) {
		r1 += "Error at " + err.pos + " : " + err.msg + "\n";
	});
	return r1 + " " + x.text + "\n" + x.indicator;
};
com_mindrocks_text_ReaderObj.position = function(r) {
	return r.offset;
};
com_mindrocks_text_ReaderObj.reader = function(str) {
	return { content : com_mindrocks_text_Tools.enumerable(str), offset : 0, memo : { memoEntries : new haxe_ds_StringMap(), recursionHeads : new haxe_ds_StringMap(), lrStack : com_mindrocks_functional_Nil._nil}};
};
com_mindrocks_text_ReaderObj.take = function(r,len) {
	return r.content.range(r.offset,len);
};
com_mindrocks_text_ReaderObj.drop = function(r,len) {
	return { content : r.content, offset : r.offset + len, memo : r.memo};
};
com_mindrocks_text_ReaderObj.startsWith = function(r,x) {
	return r.content.range(r.offset,x.length) == x;
};
com_mindrocks_text_ReaderObj.matchedBy = function(r,e) {
	return e.match(r.content.range(r.offset));
};
com_mindrocks_text_ReaderObj.rest = function(r) {
	return r.content.range(r.offset);
};
var com_mindrocks_text_FailureObj = function() { };
com_mindrocks_text_FailureObj.__name__ = "com.mindrocks.text.FailureObj";
com_mindrocks_text_FailureObj.newStack = function(failure) {
	var newStack = com_mindrocks_functional_Nil._nil;
	return new com_mindrocks_functional_List(failure,newStack);
};
com_mindrocks_text_FailureObj.errorAt = function(msg,pos) {
	return { msg : msg, pos : pos.offset};
};
com_mindrocks_text_FailureObj.report = function(stack,msg) {
	return new com_mindrocks_functional_List(msg,stack);
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = "haxe.IMap";
var haxe_Log = function() { };
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function() { };
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.measure = function(f,pos) {
	var t0 = Date.now() / 1000;
	var r = f();
	haxe_Log.trace(Date.now() / 1000 - t0 + "s",pos);
	return r;
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
String.prototype.__class__ = String;
String.__name__ = "String";
Array.__name__ = "Array";
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
com_mindrocks_functional_Nil._nil = new com_mindrocks_functional_Nil();
Parsers._parserUid = 0;
Parsers.baseFailure = "Base Failure";
Parsers.defaultFail = Parsers.fail("not matched",false);
js_Boot.__toStr = ({ }).toString;
LambdaTest.identifierR = new EReg("[a-zA-Z0-9_-]+","");
LambdaTest.numberR = new EReg("[-]*[0-9]+","");
LambdaTest.spaceP = (function($this) {
	var $r;
	var f = Parsers.identifier(" ");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.tabP = (function($this) {
	var $r;
	var f = Parsers.identifier("\t");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.retP = (function($this) {
	var $r;
	var f = Parsers.or(Parsers.identifier("\r"),Parsers.identifier("\n"));
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.spacingP = (function($this) {
	var $r;
	var pred = Parsers.notEmpty;
	var f = function(x) {
		if(pred(x)) {
			return Parsers.success(x);
		} else {
			return Parsers.defaultFail;
		}
	};
	var pred1 = Parsers.notEmpty;
	var f1 = function(x1) {
		if(pred1(x1)) {
			return Parsers.success(x1);
		} else {
			return Parsers.defaultFail;
		}
	};
	var f2 = Parsers.many(Parsers.ors([Parsers.andThen(Parsers.many(LambdaTest.spaceP),f),Parsers.andThen(Parsers.many(LambdaTest.tabP),f1)]));
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f2();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.spacingOrRetP = (function($this) {
	var $r;
	var pred = Parsers.notEmpty;
	var f = function(x) {
		if(pred(x)) {
			return Parsers.success(x);
		} else {
			return Parsers.defaultFail;
		}
	};
	var pred1 = Parsers.notEmpty;
	var f1 = function(x1) {
		if(pred1(x1)) {
			return Parsers.success(x1);
		} else {
			return Parsers.defaultFail;
		}
	};
	var pred2 = Parsers.notEmpty;
	var f2 = function(x2) {
		if(pred2(x2)) {
			return Parsers.success(x2);
		} else {
			return Parsers.defaultFail;
		}
	};
	var f3 = Parsers.many(Parsers.ors([Parsers.andThen(Parsers.many(LambdaTest.spaceP),f),Parsers.andThen(Parsers.many(LambdaTest.tabP),f1),Parsers.andThen(Parsers.many(LambdaTest.retP),f2)]));
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f3();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.stringStartP = LambdaTest.withSpacing(Parsers.identifier("\""));
LambdaTest.stringStopP = Parsers.identifier("\"");
LambdaTest.leftAccP = LambdaTest.withSpacing(Parsers.identifier("{"));
LambdaTest.rightAccP = LambdaTest.withSpacing(Parsers.identifier("}"));
LambdaTest.leftBracketP = LambdaTest.withSpacing(Parsers.identifier("["));
LambdaTest.rightBracketP = LambdaTest.withSpacing(Parsers.identifier("]"));
LambdaTest.sepP = LambdaTest.withSpacing(Parsers.identifier(":"));
LambdaTest.commaP = LambdaTest.withSpacing(Parsers.identifier(","));
LambdaTest.equalsP = LambdaTest.withSpacing(Parsers.identifier("="));
LambdaTest.arrowP = LambdaTest.withSpacing(Parsers.identifier("=>"));
LambdaTest.dotP = Parsers.identifier(".");
LambdaTest.identifierP = (function($this) {
	var $r;
	var f = Parsers.tag(LambdaTest.withSpacing(Parsers.regexParser(LambdaTest.identifierR)),"identifier");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.letP = (function($this) {
	var $r;
	var f = LambdaTest.withSpacing(Parsers.identifier("let"));
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.inP = (function($this) {
	var $r;
	var f = LambdaTest.withSpacing(Parsers.identifier("in"));
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.identP = (function($this) {
	var $r;
	var f = Parsers.tag(Parsers.then(LambdaTest.identifierP,function(id) {
		return RExpression.Ident(id);
	}),"identifier");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.numberP = Parsers.then(Parsers.regexParser(LambdaTest.numberR),function(n) {
	return PrimitiveType.Number(Std.parseInt(n));
});
LambdaTest.floatNumberP = Parsers.then(Parsers.andWith(Parsers.andWith(LambdaTest.numberP,LambdaTest.dotP,Parsers.fstParam),LambdaTest.numberP,com_mindrocks_functional_Tuples.t2),function(p) {
	return PrimitiveType.FloatNumber(parseFloat(Std.string(p.a) + "." + Std.string(p.b)));
});
LambdaTest.primitiveP = (function($this) {
	var $r;
	var f = Parsers.tag(Parsers.then(Parsers.ors([LambdaTest.floatNumberP,LambdaTest.numberP]),RExpression.Primitive),"primitive");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.lambdaP = (function($this) {
	var $r;
	var f = Parsers.tag(Parsers.then(Parsers.andWith(Parsers.andWith(LambdaTest.identifierP,LambdaTest.arrowP,Parsers.fstParam),LambdaTest.maybeRet(Parsers.commit(LambdaTest.expressionP)),com_mindrocks_functional_Tuples.t2),function(p) {
		return RExpression.LambdaExpr(p.a,p.b);
	}),"lambda");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.applicationP = (function($this) {
	var $r;
	var f = Parsers.tag(Parsers.then(Parsers.andWith(LambdaTest.rExpressionP,LambdaTest.identifierP,com_mindrocks_functional_Tuples.t2),function(p) {
		return RExpression.Apply(p.a,p.b);
	}),"application");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.rExpressionP = (function($this) {
	var $r;
	var f = Parsers.tag(Parsers.memo(Parsers.ors([LambdaTest.lambdaP,LambdaTest.applicationP,LambdaTest.identP,LambdaTest.primitiveP])),"RExpression");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.letExpressionP = (function($this) {
	var $r;
	var f = Parsers.tag(Parsers.then(Parsers.andWith(Parsers.andWith(LambdaTest.identifierP,LambdaTest.equalsP,Parsers.fstParam),LambdaTest.maybeRet(Parsers.commit(LambdaTest.rExpressionP)),com_mindrocks_functional_Tuples.t2),function(p) {
		return { ident : p.a, expr : p.b};
	}),"let expression");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.expressionP = (function($this) {
	var $r;
	var f = Parsers.tag(Parsers.then(Parsers.andWith(Parsers.option(Parsers.andWith(LambdaTest.letP,Parsers.commit(Parsers.andWith(LambdaTest.maybeRet(Parsers.andWith(Parsers.rep1sep(LambdaTest.maybeRet(LambdaTest.letExpressionP),Parsers.or(LambdaTest.commaP,LambdaTest.retP)),Parsers.option(LambdaTest.commaP),Parsers.fstParam)),LambdaTest.maybeRet(LambdaTest.inP),Parsers.fstParam)),Parsers.sndParam)),LambdaTest.maybeRet(LambdaTest.rExpressionP),com_mindrocks_functional_Tuples.t2),function(p) {
		var lets;
		var _g = p.a;
		switch(_g._hx_index) {
		case 0:
			lets = [];
			break;
		case 1:
			var ls = _g.x;
			lets = ls;
			break;
		}
		return { lets : lets, expr : p.b};
	}),"expression");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.definitionP = (function($this) {
	var $r;
	var f = Parsers.tag(Parsers.then(Parsers.andWith(Parsers.andWith(LambdaTest.maybeRet(LambdaTest.identifierP),LambdaTest.equalsP,Parsers.fstParam),LambdaTest.maybeRet(Parsers.commit(LambdaTest.expressionP)),com_mindrocks_functional_Tuples.t2),function(p) {
		return { name : p.a, expr : p.b};
	}),"definition");
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
LambdaTest.programP = (function($this) {
	var $r;
	var f = Parsers.commit(Parsers.tag(Parsers.many(LambdaTest.definitionP),"program"));
	var r = null;
	$r = function() {
		if(r == null) {
			r = false;
			r = f();
			return r;
		} else {
			return r;
		}
	};
	return $r;
}(this));
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
